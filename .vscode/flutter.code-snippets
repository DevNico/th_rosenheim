{
	// Place your template workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "dart",
		"prefix": "model",
		"body": [
			"import 'package:equatable/equatable.dart';",
			"import 'package:flutter/foundation.dart';",
			"import 'package:json_annotation/json_annotation.dart';",
			"",
			"part '${TM_FILENAME_BASE}.g.dart';",
			"",
			"@JsonSerializable()",
			"class $1 extends Equatable {",
			"\tfinal String string;",
			"",
			"\t$1({",
			"\t\t@required this.string,",
			"\t});",
			"",
			"\t$1 copyWith({",
			"\t\tString string,",
			"\t}) =>",
			"\t\t$1(",
			"\t\t\tstring: string ?? this.string,",
			"\t\t);",
			"",
			"\tfactory $1.fromJson(Map<String, dynamic> json) => _$$1FromJson(json);",
			"",
			"\tMap<String, dynamic> toJson() => _$$1ToJson(this);",
			"",
			"\t@override",
			"\tList<Object> get props => [string];",
			"",
			"\t@override",
			"\tString toString() {",
			"\t\treturn '''$1 {",
			"\t\t\tstring: \\$string,",
			"\t\t}''';",
			"\t}",
			"}"
		],
		"description": "Create a model class for json_serializable"
	}
}
